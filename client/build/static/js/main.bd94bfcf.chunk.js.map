{"version":3,"sources":["components/Header.jsx","pages/login.jsx","context/AuthConterxt.jsx","util/date.js","components/Avatar.jsx","components/ChatCard.jsx","components/NewChatForm.jsx","components/Chats.jsx","pages/AllChat.jsx","pages/profile.jsx","App.jsx","service/auth.js","service/chat.js","network/http.js","db/token.js","network/socket.js","index.js"],"names":["Header","memo","id","userName","onLogout","onAllChats","onProfile","className","src","alt","onClick","Login","signUp","logIn","useState","signup","setSignup","setUserName","setId","pw","setPw","email","setEmail","url","setUrl","onChange","event","target","name","value","checked","onSubmit","preventDefault","type","placeholder","required","htmlFor","AuthContext","createContext","contextRef","createRef","AuthProvider","authService","authErrorEventBus","children","undefined","user","setUser","useImperativeHandle","token","useEffect","listen","err","console","log","me","then","catch","error","useCallback","a","login","logout","context","useMemo","Provider","AuthErrorEventBus","callback","this","useAuth","useContext","parseDate","tdate","created","Date","parse","now","diff","Math","floor","round","month","toLocaleDateString","getDate","Avatar","ChatCard","chat","owner","chatService","text","createdAt","chatID","rightClick","setRightClick","history","useHistory","e","deleteChat","push","onContextMenu","NewChatForm","onError","userID","setChat","postChat","autoFocus","evnet","Chats","chats","setChats","setError","getAllChats","stopSync","onSync","onCreated","toString","setTimeout","map","AllChat","Profile","updateUser","data","alert","updateUserName","readOnly","App","window","confirm","exact","path","AuthService","http","tokenStorage","fetch","method","body","JSON","stringify","saveToken","getToken","headers","Authorization","clearToken","ChatService","socket","getHeaders","HttpClient","baseURL","options","res","json","status","message","Error","TOKEN","TokenStorage","localStorage","setItem","getItem","clear","Socket","getAccessToken","io","auth","cb","on","connected","connect","off","process","httpClient","socketClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd94bfcf.chunk.js","sourcesContent":["import React, {memo} from 'react';\r\n\r\nconst Header = memo(({id, userName, onLogout, onAllChats, onProfile}) => {\r\n    return (\r\n        <header className='header'>\r\n            <div className='logo'>\r\n                <img src='./img/logo.jpg' alt='Simple Chat Logo' className='logo-img' />\r\n                <h1 className='logo-name'>Amond Talk</h1>\r\n                {userName && <span className='logo-user'>@{userName}</span>}\r\n            </div>\r\n            {userName && (\r\n                <nav className='menu'>\r\n                    <button onClick={onAllChats}>All Chats</button>\r\n                    <button onClick={onProfile}>Profile</button>\r\n                    <button className='menu-item' onClick={onLogout}>Logout</button>\r\n                </nav>\r\n            )}\r\n        </header>\r\n    )\r\n});\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nconst Login = ({signUp, logIn}) => {\r\n    const [signup, setSignup] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(signup){\r\n            signUp(id, pw, userName, email, url);\r\n        }else{\r\n            logIn(id, pw);\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value, checked},\r\n        } = event;\r\n\r\n        switch (name) {\r\n            case 'userName':\r\n                return setUserName(value);\r\n            case 'id':\r\n                return setId(value);\r\n            case 'pw':\r\n                return setPw(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'url':\r\n                return setUrl(value);\r\n            case 'signup':\r\n                return setSignup(checked);\r\n            default:\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <form className='auth-form' onSubmit={onSubmit}>\r\n          <input\r\n            name='id'\r\n            type='text'\r\n            placeholder='Id'\r\n            value={id}\r\n            onChange={onChange}\r\n            className='form-input'\r\n            required\r\n          />\r\n          <input\r\n            name='pw'\r\n            type='password'\r\n            placeholder='Password'\r\n            value={pw}\r\n            className='form-input'\r\n            onChange={onChange}\r\n          />\r\n          {signup && (\r\n            <input\r\n              name='userName'\r\n              type='text'\r\n              placeholder='Name'\r\n              value={userName}\r\n              onChange={onChange}\r\n              className='form-input'\r\n              required\r\n            />\r\n          )}\r\n          {signup && (\r\n            <input\r\n              name='email'\r\n              type='email'\r\n              placeholder='Email'\r\n              value={email}\r\n              onChange={onChange}\r\n              className='form-input'\r\n              required\r\n            />\r\n          )}\r\n          {signup && (\r\n            <input\r\n              name='url'\r\n              type='url'\r\n              placeholder='Profile Image URL'\r\n              value={url}\r\n              onChange={onChange}\r\n              className='form-input'\r\n            />\r\n          )}\r\n          <div className='form-signup'>\r\n            <input\r\n              name='signup'\r\n              id='signup'\r\n              type='checkbox'\r\n              onChange={onChange}\r\n              checked={signup}\r\n            />\r\n            <label htmlFor='signup'> Create a new account?</label>\r\n          </div>\r\n          <button className='form-btn auth-form-btn' type='submit'>\r\n            {signup ? 'Sign Up' : 'Sign In'}\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Login;","import {\r\n    createContext, useCallback, useMemo, useState,useImperativeHandle, createRef, useEffect, useContext\r\n  } from 'react';\r\nimport Login from '../pages/login';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nconst contextRef = createRef();\r\n\r\nexport function AuthProvider({authService, authErrorEventBus, children}){\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    useImperativeHandle(contextRef, () => (user ? user.token : undefined));\r\n\r\n    useEffect(() => {\r\n        authErrorEventBus.listen((err) => {\r\n        console.log(err);\r\n        setUser(undefined);\r\n        });\r\n    }, [authErrorEventBus]);\r\n\r\n    useEffect(() => {\r\n        authService.me().then(setUser).catch(console.error);\r\n    }, [authService]);\r\n\r\n\r\n    const signUp = useCallback(\r\n        async(id, pw, userName, email, url) => {\r\n            authService\r\n                .signup(id, pw, userName, email, url)\r\n                .then((user) => setUser(user));\r\n        }, [authService]\r\n    )\r\n\r\n    const logIn = useCallback(\r\n        async(id, pw) => \r\n            authService.login(id, pw).then((user) => {console.log(user); setUser(user)}),\r\n        [authService]\r\n    )\r\n\r\n    const logout = useCallback(\r\n        async () => authService.logout().then(() => setUser(undefined)),\r\n        [authService]\r\n    );\r\n\r\n    const context = useMemo(\r\n        () => ({\r\n            user,\r\n            signUp,\r\n            logIn,\r\n            logout\r\n        }), [user, signUp, logIn, logout]\r\n    );\r\n\r\n    return(\r\n        <AuthContext.Provider value={context}>\r\n            { user ? (\r\n                children\r\n            ) : (\r\n                <div>\r\n                    <Login signUp={signUp} logIn={logIn}/>\r\n                </div>\r\n            )}\r\n        </AuthContext.Provider>    \r\n    );\r\n    \r\n}\r\n\r\nexport class AuthErrorEventBus {\r\n    listen(callback) {\r\n      this.callback = callback;\r\n    }\r\n    notify(error) {\r\n      this.callback(error);\r\n    }\r\n  }\r\n\r\nexport default AuthContext;\r\nexport const fetchToken = () => contextRef.current;\r\nexport const useAuth = () => useContext(AuthContext);","export default function parseDate(tdate) {\r\n    const created = new Date(Date.parse(tdate));\r\n    const now = new Date();\r\n    const diff = Math.floor((now - created) / 1000);\r\n    if (diff <= 1) {\r\n      return 'just now';\r\n    }\r\n    if (diff < 20) {\r\n      return diff + ' seconds ago';\r\n    }\r\n    if (diff < 40) {\r\n      return 'half a minute ago';\r\n    }\r\n    if (diff < 60) {\r\n      return 'less than a minute ago';\r\n    }\r\n    if (diff <= 90) {\r\n      return 'one minute ago';\r\n    }\r\n    if (diff <= 3540) {\r\n      return Math.round(diff / 60) + ' minutes ago';\r\n    }\r\n    if (diff <= 5400) {\r\n      return '1 hour ago';\r\n    }\r\n    if (diff <= 86400) {\r\n      return Math.round(diff / 3600) + ' hours ago';\r\n    }\r\n    if (diff <= 129600) {\r\n      return '1 day ago';\r\n    }\r\n    if (diff < 604800) {\r\n      return Math.round(diff / 86400) + ' days ago';\r\n    }\r\n    if (diff <= 777600) {\r\n      return '1 week ago';\r\n    }\r\n    const month = created.toLocaleDateString('default', { month: 'long' });\r\n    return `on ${month} ${created.getDate()}`;\r\n  }\r\n  ","import React, { memo } from 'react';\r\n\r\nconst Avatar = memo(({url, userName}) => {\r\n    const emptyUrl = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2UfTSQN07wL1KUUzw5B0FpM1oLUl1kVHEmEvm1BbAJBkpDIdd3SXol0WQtnlG11fkKXU&usqp=CAU';\r\n    return(\r\n    <div className='avatar-warp'>\r\n        {!!url ? (\r\n            <img src={url} alt='avatar' className='avatar-img'/>\r\n        ) : (\r\n            <img src={emptyUrl} alt='avatar' className='avatar-img'/>\r\n        )}\r\n        {userName}\r\n    </div>)\r\n});\r\n\r\nexport default Avatar;","import React, { memo, useState } from 'react';\r\nimport parseDate from '../util/date';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport Avatar from './Avatar';\r\n\r\nconst ChatCard = memo(({chat, owner, user, chatService}) => {\r\n    const {text, createdAt, chatID, userName} = chat;\r\n    const { url} = user;\r\n    const [rightClick, setRightClick] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onRightClick = (e) => {\r\n        e.preventDefault();\r\n        setRightClick(!rightClick);\r\n    }\r\n\r\n    const clickDeleteBtn = (e) => {\r\n        e.preventDefault();\r\n        chatService\r\n            .deleteChat(e.target.id)\r\n            .then(() => history.push('/'));\r\n    }\r\n\r\n    return (\r\n        <li className='chat'>\r\n                {owner ? (\r\n                    <section className='chat-container-my'>\r\n                       {rightClick ?   \r\n                                    (<div className='deleteBtn'>\r\n                                        <button onClick={clickDeleteBtn} id={chatID}>❌</button>\r\n                                    </div>) : <></>} \r\n                        <div className='chat-body-my' onContextMenu={onRightClick}>\r\n                            <text>{text}</text>\r\n                        </div>\r\n                        <div className='chat-time-my'>\r\n                            {parseDate(createdAt)}\r\n                        </div>\r\n                    </section>\r\n                    ) : (\r\n                    <section className='chat-container'>\r\n                        <Avatar url={url} userName={userName}/>\r\n                        <div className='chat-body'>\r\n                            <text>{text}</text>\r\n                        </div>\r\n                        <div className='chat-time'>\r\n                            {parseDate(createdAt)}\r\n                        </div>\r\n                    </section>\r\n                    )}\r\n        </li>\r\n    )\r\n});\r\n\r\nexport default ChatCard;","import React, {useState} from 'react';\r\n\r\n\r\nconst NewChatForm = ({chatService, onError, userID}) => {\r\n    const [chat, setChat] = useState('');\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        chatService\r\n            .postChat(chat, userID)\r\n            .then(() => {\r\n                setChat('')\r\n            })\r\n            .catch(onError);\r\n    }\r\n\r\n    const onChange = (evnet) => {\r\n        setChat(evnet.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className='chat-form' onSubmit={onSubmit}>\r\n            <input\r\n                type='text'\r\n                value={chat}\r\n                autoFocus\r\n                onChange={onChange}\r\n                className='form-input chat-input'\r\n            />\r\n            <button type='submit' className='form-btn'>🎈</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewChatForm;\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/AuthConterxt';\r\nimport ChatCard from './ChatCard';\r\nimport NewChatForm from './NewChatForm';\r\n\r\nconst Chats = memo(({authService, chatService}) => {\r\n    const [chats, setChats] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const {user} = useAuth();\r\n\r\n    useEffect(() => {\r\n        chatService\r\n            .getAllChats()\r\n            .then((chats) => setChats([...chats['chats']]))\r\n            .catch(onError);\r\n\r\n        const stopSync = chatService.onSync((chat) => onCreated(chat));\r\n        return () => stopSync();\r\n    }, [authService, chatService, user.id, user]);\r\n\r\n    const onCreated = (chat) => {\r\n        setChats((chats) => [...chats, chat]);\r\n    }\r\n\r\n    const onError = (error) => {\r\n        setError(error.toString());\r\n        setTimeout(() => {\r\n            setError('');\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {error && <h1>{error}</h1>}\r\n            <ul className='chats'>\r\n                {chats.map((chat) => {\r\n                    return (\r\n                    <ChatCard\r\n                        key={chat.chatID}\r\n                        chat={chat}\r\n                        owner={chat.userID === user.id}\r\n                        user= {user}\r\n                        chatService= {chatService}\r\n                    />\r\n                )})}\r\n            </ul>\r\n            <NewChatForm chatService={chatService} onError={onError} userID ={user.id}/>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default Chats;","import React from 'react';\r\nimport Chats from '../components/Chats';\r\n\r\nconst AllChat = ({authService, chatService}) => (\r\n    <Chats authService={authService} chatService={chatService} />\r\n);\r\n\r\nexport default AllChat;","import React, {memo, useState} from 'react';\r\n\r\nimport { useAuth } from '../context/AuthConterxt';\r\n\r\nconst Profile = memo(({authService, chatService, id}) => {\r\n    const {user} = useAuth();\r\n    const [userName, setUserName] = useState(user.userName);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [url, setUrl] = useState(user.url);\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        authService.updateUser(id, userName, email, url)\r\n                   .then((data) => alert('Update complite'));\r\n\r\n        // user 이름이 바뀌면 그와 연결된 채팅의 uesr이름들도 업데이트\r\n        if(user.userName !== userName){\r\n            chatService\r\n                .updateUserName(id, userName)\r\n                .then((data) => console.log('update userName'));\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name, value},\r\n        } = event;\r\n\r\n        switch (name) {\r\n            case 'userName':\r\n                return setUserName(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'url':\r\n                return setUrl(value);\r\n            default:\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className='auth-form' onSubmit={onSubmit}>\r\n                <div>\r\n                    ID : \r\n                    <input\r\n                        name='id'\r\n                        type='text'\r\n                        placeholder='Id'\r\n                        value={id}\r\n                        className='form-input'\r\n                        readOnly={true}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    Name : \r\n                    <input\r\n                        name='userName'\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        value={userName}\r\n                        onChange={onChange}\r\n                        className='form-input'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    EMAIL : \r\n                    <input\r\n                        name='email'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        className='form-input'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    ImgUrl : \r\n                    <input\r\n                        name='url'\r\n                        type='url'\r\n                        placeholder='Profile Image URL'\r\n                        value={url}\r\n                        onChange={onChange}\r\n                        className='form-input'\r\n                    />\r\n                </div>\r\n                <button className='form-btn auth-form-btn' type='submit'>\r\n                    Update\r\n                </button>\r\n            </form>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Profile;","import { Switch, Route, useHistory} from 'react-router-dom';\nimport Header from './components/Header';\nimport { useAuth } from './context/AuthConterxt';\n\nimport AllChat from './pages/AllChat';\n// import MyChat from './pages/MyChat';\nimport Profile from './pages/profile';\n\nfunction App({authService, chatService}) {\n  const history = useHistory();\n  const {user, logout} = useAuth();\n\n  const onAllChats = () => {\n    history.push('/');\n  };\n\n  // const onMyChats = () => {\n  //   history.push(`/myChats`);\n  // }\n\n  const onLogout = () => {\n    if(window.confirm('Do you want to log out?')){\n      console.log('logout!');\n      logout();\n      history.push('/');\n    }\n  }\n\n  const onProfile = () => {\n    history.push('/profile');\n  }\n  return (\n    <div className=\"app\">\n      <Header\n        id = {user.id}\n        userName = {user.userName}\n        onLogout = {onLogout}\n        onAllChats = {onAllChats}\n        // onMyChats = {onMyChats}\n        onProfile = {onProfile}\n      />\n      <Switch>\n        (\n          <>\n            <Route exact path='/'>\n              <AllChat authService={authService} chatService={chatService}/>\n            </Route>\n            {/* <Route exact path='/myChats'>\n              <MyChat chatService={chatService}/>\n            </Route> */}\n            <Route exact path='/profile'>\n              <Profile authService={authService} chatService={chatService} id={user.id}/>\n            </Route>\n          </>\n        )\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","export default class AuthService {\r\n    constructor(http, tokenStorage) {\r\n      this.http = http;\r\n      this.tokenStorage = tokenStorage;\r\n    }\r\n  \r\n    async signup(id, pw, userName, email, url) {\r\n      const data = await this.http.fetch('/auth/signUp', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id,\r\n          pw,\r\n          userName,\r\n          email,\r\n          url,\r\n        }),\r\n      });\r\n      this.tokenStorage.saveToken(data.token);\r\n      return data;\r\n    }\r\n  \r\n    async login(id, pw) {\r\n      const data = await this.http.fetch('/auth/signIn', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ id, pw }),\r\n      });\r\n      this.tokenStorage.saveToken(data.token);\r\n      return data;\r\n    }\r\n\r\n    async updateUser(id, userName, email, url) {\r\n      const data = await this.http.fetch('/auth/updateUser', {\r\n        method: 'PUT',\r\n        body: JSON.stringify({id, userName, email, url}),\r\n      });\r\n\r\n      return data;\r\n    }\r\n  \r\n    async me() {\r\n      const token = this.tokenStorage.getToken();\r\n      return this.http.fetch('/auth/me', {\r\n        method: 'GET',\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n    }\r\n\r\n    async getAllUsers() {\r\n      const token = this.tokenStorage.getToken();\r\n      return this.http.fetch('/auth/allUsers', {\r\n        method: 'GET',\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n    }\r\n  \r\n    async logout() {\r\n      this.tokenStorage.clearToken();\r\n    }\r\n  }\r\n  ","export default class ChatService {\r\n    constructor(http, tokenStorage, socket) {\r\n        this.http = http;\r\n        this.tokenStorage = tokenStorage;\r\n        this.socket = socket;\r\n    }\r\n\r\n    async getMyChats(userID) {\r\n        return this.http.fetch('/chat/getMyChat', {\r\n            method: 'GET',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({userID})\r\n        });\r\n    }\r\n\r\n    async getAllChats() {\r\n        return this.http.fetch('/chat/getAllChat', {\r\n            method: 'GET',\r\n            headers: this.getHeaders(),\r\n        });\r\n    }\r\n\r\n    async postChat(text, userID) {\r\n        return this.http.fetch('/chat/createChat', {\r\n            method: 'POST',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({ text, userID }),\r\n        });\r\n    }\r\n\r\n    async deleteChat(chatID) {\r\n        return this.http.fetch('/chat/deleteChat', {\r\n            method: 'PUT',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({chatID})\r\n        });\r\n    }\r\n\r\n    async updateUserName(userID, userName){\r\n        return this.http.fetch('/chat/updateUserName', {\r\n            method: 'PUT',\r\n            headers: this.getHeaders(),\r\n            body: JSON.stringify({userID, userName})\r\n        })\r\n    }\r\n\r\n    getHeaders() {\r\n        const token = this.tokenStorage.getToken();\r\n        return {\r\n            Authorization: `Bearer ${token}`,\r\n        };\r\n    }\r\n\r\n    onSync(callback) {\r\n        return this.socket.onSync('chats', callback);\r\n    }\r\n}","export default class HttpClient {\r\n    constructor(baseURL) {\r\n      this.baseURL = baseURL;\r\n    }\r\n  \r\n    async fetch(url, options) {\r\n      const res = await fetch(`${this.baseURL}${url}`, {\r\n        ...options,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...options.headers,\r\n        },\r\n      });\r\n      console.log(res);\r\n\r\n      let data;\r\n      try {\r\n        data = await res.json();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n  \r\n      if (res.status > 299 || res.status < 200) {\r\n        const message =\r\n          data && data.message ? data.message : 'Something went wrong! 🤪';\r\n        throw new Error(message);\r\n      }\r\n      return data;\r\n    }\r\n  }\r\n  ","const TOKEN = 'token';\r\n\r\nexport default class TokenStorage {\r\n  saveToken(token) {\r\n    localStorage.setItem(TOKEN, token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(TOKEN);\r\n  }\r\n\r\n  clearToken() {\r\n    localStorage.clear(TOKEN);\r\n  }\r\n}\r\n","import socket from 'socket.io-client';\r\n\r\nexport default class Socket {\r\n  constructor(baseURL, getAccessToken) {\r\n    this.io = socket(baseURL, {\r\n      auth: (cb) => cb({ token: getAccessToken() }),\r\n    });\r\n\r\n    this.io.on('connect_error', (err) => {\r\n      console.log('socket error', err.message);\r\n    });\r\n  }\r\n\r\n  onSync(event, callback) {\r\n    if (!this.io.connected) {\r\n      this.io.connect();\r\n    }\r\n\r\n    this.io.on(event, (message) => callback(message));\r\n    return () => this.io.off(event);\r\n  }\r\n}\r\n","// global Import\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// local Import\nimport './index.css';\nimport App from './App';\nimport {AuthProvider, AuthErrorEventBus} from './context/AuthConterxt';\nimport AuthService from './service/auth';\nimport ChatService from './service/chat';\nimport HttpClient from './network/http';\nimport TokenStorage from './db/token';\nimport Socket from './network/socket';\n\nconst baseURL = process.env.REACT_APP_BASE_URL;\nconst tokenStorage = new TokenStorage();\nconst httpClient = new HttpClient(baseURL);\nconst authErrorEventBus = new AuthErrorEventBus();\nconst authService = new AuthService(httpClient, tokenStorage);\nconst socketClient = new Socket(baseURL, () => tokenStorage.getToken());\nconst chatService = new ChatService(httpClient, tokenStorage, socketClient);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider\n        authService={authService}\n        authErrorEventBus={authErrorEventBus}\n      >\n        <App authService={authService} chatService={chatService}/>\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}